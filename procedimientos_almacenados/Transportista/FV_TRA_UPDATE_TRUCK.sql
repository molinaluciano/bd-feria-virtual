create or replace PROCEDURE FV_TRA_UPDATE_TRUCK
 (
    PATENTE_IN IN VARCHAR2,
    MODELO_IN IN VARCHAR2,
    MARCA_IN IN VARCHAR2,
    REVISION_TECNICA_IN IN NUMBER,
    DISPONIBILIDAD_IN IN NUMBER,
    ID_TIPO_CAMION_IN IN NUMBER,
    ID_TAMANO_CAMION_IN IN NUMBER,
    ID_TRANSPORTISTA_IN IN NUMBER,
    STATUS_RESULT_OUT OUT NUMBER
    
)

AS 
    TRUCK_EDITED EXCEPTION;
    ID_TEMP_VAR NUMBER := 0;
    COUNT_TRUCK NUMBER := 0;
    IS_VALID_TRUCK NUMBER  := 0;
    
    
    INVALID_TAMANO_CAMION EXCEPTION;
    TRUCK_NOT_FOUND EXCEPTION;
    INVALID_TIPO_CAMION EXCEPTION;
    USER_NOT_FOUND EXCEPTION;
    
    COUNT_USER NUMBER := 0;
    MIN_ESTADO NUMBER := 0;
    MAX_ESTADO NUMBER:= 0;
BEGIN  
    IF ID_TRANSPORTISTA_IN != 0 OR ID_TRANSPORTISTA_IN IS NOT NULL THEN
        SELECT COUNT(*) INTO COUNT_USER FROM TRANSPORTISTA WHERE ID_TRANSPORTISTA = ID_TRANSPORTISTA_IN;
         IF  COUNT_USER <= 0 THEN
            RAISE USER_NOT_FOUND;
         END IF;
    END IF;
    
    
    IF ID_TIPO_CAMION_IN != 0 OR ID_TIPO_CAMION_IN IS NOT NULL THEN
        SELECT MIN(ID_TIPO_CAMION), MAX(ID_TIPO_CAMION) INTO MIN_ESTADO, MAX_ESTADO FROM TIPO_CAMION;
        IF ID_TIPO_CAMION_IN NOT BETWEEN MIN_ESTADO AND MAX_ESTADO THEN
                RAISE INVALID_TIPO_CAMION;
        END IF;
    END IF;
     
    
    IF ID_TAMANO_CAMION_IN != 0 OR ID_TAMANO_CAMION_IN IS NOT NULL THEN
        SELECT MIN(ID_TAMANO_CAMION), MAX(ID_TAMANO_CAMION) INTO MIN_ESTADO, MAX_ESTADO FROM TAMANO_CAMION;
        IF ID_TAMANO_CAMION_IN NOT BETWEEN MIN_ESTADO AND MAX_ESTADO THEN
                RAISE INVALID_TAMANO_CAMION;
        END IF;
    END IF;
     
   
    
    SELECT COUNT(*) INTO COUNT_TRUCK FROM CAMION WHERE PATENTE = PATENTE_IN;
    IF  COUNT_TRUCK > 0 THEN
        SELECT ID_CAMION INTO ID_TEMP_VAR FROM CAMION WHERE PATENTE = PATENTE_IN;
        UPDATE CAMION SET 
        PATENTE = COALESCE(PATENTE_IN, PATENTE), 
        MODELO = COALESCE(MODELO_IN, MODELO), 
        MARCA = COALESCE(MARCA_IN, MARCA), 
        REVISION_TECNICA = COALESCE (REVISION_TECNICA_IN, REVISION_TECNICA), 
        DISPONIBILIDAD = COALESCE (DISPONIBILIDAD_IN, DISPONIBILIDAD), 
        ID_TIPO_CAMION = COALESCE (ID_TIPO_CAMION_IN, ID_TIPO_CAMION), 
        ID_TAMANO_CAMION = COALESCE (ID_TAMANO_CAMION_IN, ID_TAMANO_CAMION), 
        ID_TRANSPORTISTA = COALESCE (ID_TRANSPORTISTA_IN, ID_TRANSPORTISTA) 
        WHERE ID_CAMION = ID_TEMP_VAR ;
        RAISE TRUCK_EDITED;
    ELSE
        RAISE TRUCK_NOT_FOUND;
    END IF; 
    
    EXCEPTION
    WHEN TRUCK_EDITED THEN
        STATUS_RESULT_OUT := 1;
        DBMS_OUTPUT.PUT_LINE('CAMION EDITADO' );
    WHEN INVALID_TAMANO_CAMION THEN
        STATUS_RESULT_OUT := -1;
        DBMS_OUTPUT.PUT_LINE('TAMAÃ‘O CAMION INVALIDO' );
    WHEN TRUCK_NOT_FOUND THEN
        STATUS_RESULT_OUT := -2;
        DBMS_OUTPUT.PUT_LINE(' CAMION NO ENCONTRADO' );
    WHEN INVALID_TIPO_CAMION THEN
        STATUS_RESULT_OUT := -3;
        DBMS_OUTPUT.PUT_LINE('TIPO CAMION INVALIDO' );
    WHEN USER_NOT_FOUND THEN
        STATUS_RESULT_OUT := -4;
        DBMS_OUTPUT.PUT_LINE('TRANSPORTISTA NO ENCONTRADO' );
    WHEN OTHERS THEN   
        STATUS_RESULT_OUT:= -5;
        DBMS_OUTPUT.PUT_LINE('UPS HUBO UN ERROR' );
        
END;




-- DECLARE 
--    ID_RESULT_OUT NUMBER;
--    STATUS_RESULT_OUT NUMBER;
-- BEGIN
--    FV_TRA_UPDATE_TRUCK('E', NULL, 'NI', 0,0, 1, 1 , 1, STATUS_RESULT_OUT);
--    DBMS_OUTPUT.PUT_LINE(STATUS_RESULT_OUT);
-- END;