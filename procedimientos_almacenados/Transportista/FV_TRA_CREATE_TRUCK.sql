create or replace PROCEDURE FV_TRA_CREATE_TRUCK
 (
    PATENTE_IN IN VARCHAR2,
    MODELO_IN IN VARCHAR2,
    MARCA_IN IN VARCHAR2,
    REVISION_TECNICA_IN IN NUMBER,
    DISPONIBILIDAD_IN IN NUMBER,
    ID_TIPO_CAMION_IN IN NUMBER,
    ID_TAMANO_CAMION_IN IN NUMBER,
    ID_TRANSPORTISTA_IN IN NUMBER,
    ID_RESULT_OUT OUT NUMBER,
    STATUS_RESULT_OUT OUT NUMBER
    
)

AS 
    IS_VALID_TRUCK NUMBER := 0;
    INVALID_MODEL EXCEPTION;
    TRUCK_CREATED EXCEPTION;
    INVALID_TAMANO_CAMION EXCEPTION;
    INVALID_TIPO_CAMION EXCEPTION;
    USER_NOT_FOUND EXCEPTION;
    CAMION_FOUND EXCEPTION;

    
    COUNT_CAMION NUMBER := 0;
    COUNT_USER NUMBER := 0;
    MIN_ESTADO NUMBER := 0;
    MAX_ESTADO NUMBER:= 0;
    
BEGIN

    SELECT COUNT(*) INTO COUNT_USER FROM TRANSPORTISTA WHERE ID_TRANSPORTISTA = ID_TRANSPORTISTA_IN;
    IF  COUNT_USER <= 0 THEN
        RAISE USER_NOT_FOUND;
    END IF;
    
    SELECT MIN(ID_TAMANO_CAMION), MAX(ID_TAMANO_CAMION) INTO MIN_ESTADO, MAX_ESTADO FROM TAMANO_CAMION;
    IF ID_TAMANO_CAMION_IN NOT BETWEEN MIN_ESTADO AND MAX_ESTADO THEN
            RAISE INVALID_TAMANO_CAMION;
    END IF;
    
    SELECT MIN(ID_TIPO_CAMION), MAX(ID_TIPO_CAMION) INTO MIN_ESTADO, MAX_ESTADO FROM TIPO_CAMION;
    IF ID_TIPO_CAMION_IN NOT BETWEEN MIN_ESTADO AND MAX_ESTADO THEN
            RAISE INVALID_TIPO_CAMION;
    END IF;
    
    SELECT COUNT(*) INTO COUNT_CAMION FROM CAMION WHERE PATENTE = PATENTE_IN ;
    IF  COUNT_CAMION > 0 THEN
        RAISE CAMION_FOUND;
    END IF;
    
    
    
    SELECT FN_VALID_TRUCK(PATENTE_IN, MODELO_IN, MARCA_IN, REVISION_TECNICA_IN, DISPONIBILIDAD_IN, ID_TIPO_CAMION_IN, ID_TAMANO_CAMION_IN) INTO IS_VALID_TRUCK FROM DUAL;   
    IF IS_VALID_TRUCK != 1 THEN
        DBMS_OUTPUT.PUT_LINE('HAY PROBLEMA CON LA FUNCION DEBIDO A QUE EL MODELO NO ESTA COMPLETO' );
        RAISE INVALID_MODEL;
    END IF;
    
    INSERT INTO CAMION (ID_TIPO_CAMION, ID_TAMANO_CAMION, PATENTE, MODELO, MARCA, REVISION_TECNICA, ID_TRANSPORTISTA, DISPONIBILIDAD) VALUES (ID_TIPO_CAMION_IN, ID_TAMANO_CAMION_IN, PATENTE_IN, MODELO_IN, MARCA_IN, REVISION_TECNICA_IN, ID_TRANSPORTISTA_IN, DISPONIBILIDAD_IN) RETURN ID_CAMION INTO ID_RESULT_OUT;
    RAISE TRUCK_CREATED;
    
    EXCEPTION
    WHEN TRUCK_CREATED THEN
        STATUS_RESULT_OUT := 1;
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('CAMION CREADO' );
    WHEN INVALID_MODEL THEN
        STATUS_RESULT_OUT := 0;
        DBMS_OUTPUT.PUT_LINE('MODELO INGRESADO INVALIDO' );
    WHEN INVALID_TAMANO_CAMION THEN
        STATUS_RESULT_OUT := -1;
        DBMS_OUTPUT.PUT_LINE('TAMANO CAMION INVALIDO' );
    WHEN INVALID_TIPO_CAMION THEN
        STATUS_RESULT_OUT := -2;
        DBMS_OUTPUT.PUT_LINE('TIPO CAMION INVALIDO' );
    WHEN USER_NOT_FOUND THEN
        STATUS_RESULT_OUT := -3;
        DBMS_OUTPUT.PUT_LINE('TRANSPORTISTA NO ENCONTRADO' );
    WHEN CAMION_FOUND THEN
        STATUS_RESULT_OUT := -4;
        DBMS_OUTPUT.PUT_LINE('CAMION ENCONTRADO' );
    WHEN OTHERS THEN   
        STATUS_RESULT_OUT:= -5;
        DBMS_OUTPUT.PUT_LINE('ERROR SQL EXCEPTION' );
END;


-- INSERT INTO CAMION (ID_TIPO_CAMION, ID_TAMANO_CAMION, PATENTE, MODELO, MARCA, REVISION_TECNICA, ID_TRANSPORTISTA, DISPONIBILIDAD) VALUES ('123CASD', '350z', 'Nissan', 1, 1, 1, 1, 1);
-- DELETE CAMION WHERE ID_CAMION = 1;
-- DECLARE 
--     ID_RESULT_OUT NUMBER;
--     STATUS_RESULT_OUT NUMBER;
-- BEGIN
--     FV_TRA_CREATE_TRUCK('123CASD', '350z', 'Nissan', 1, 1, '1', 1, '1', ID_RESULT_OUT, STATUS_RESULT_OUT);
--     DBMS_OUTPUT.PUT_LINE(ID_RESULT_OUT);
-- END;
