create or replace PROCEDURE FV_TRA_CREATE_TRUCK
 (
    PATENTE_IN IN VARCHAR2,
    MODELO_IN IN VARCHAR2,
    MARCA_IN IN VARCHAR2,
    REVISION_TECNICA_IN IN NUMBER,
    DISPONIBILIDAD_IN IN NUMBER,
    ID_TIPO_CAMION_IN IN NUMBER,
    ID_TAMANO_CAMION_IN IN NUMBER,
    ID_TRANSPORTISTA_IN IN NUMBER,
    ID_RESULT_OUT OUT NUMBER,
    STATUS_RESULT_OUT OUT NUMBER
    
)

AS 
    IS_VALID_TRUCK NUMBER := 0;
    INVALID_MODEL EXCEPTION;
    TRUCK_CREATED EXCEPTION;
    
BEGIN
    SELECT FN_VALID_TRUCK(PATENTE_IN, MODELO_IN, MARCA_IN, REVISION_TECNICA_IN, DISPONIBILIDAD_IN, ID_TIPO_CAMION_IN, ID_TAMANO_CAMION_IN) INTO IS_VALID_TRUCK FROM DUAL;   
    IF IS_VALID_TRUCK != 1 THEN
        DBMS_OUTPUT.PUT_LINE('HAY PROBLEMA CON LA FUNCION DEBIDO A QUE EL MODELO NO ESTA COMPLETO' );
        RAISE INVALID_MODEL;
    END IF;
--    
    INSERT INTO CAMION (ID_TIPO_CAMION, ID_TAMANO_CAMION, PATENTE, MODELO, MARCA, REVISION_TECNICA, ID_TRANSPORTISTA, DISPONIBILIDAD) VALUES (ID_TIPO_CAMION_IN, ID_TAMANO_CAMION_IN, PATENTE_IN, MODELO_IN, MARCA_IN, REVISION_TECNICA_IN, ID_TRANSPORTISTA_IN, DISPONIBILIDAD_IN) RETURN ID_CAMION INTO ID_RESULT_OUT;
    RAISE TRUCK_CREATED;
    
    EXCEPTION
    WHEN TRUCK_CREATED THEN
        STATUS_RESULT_OUT := 1;
        DBMS_OUTPUT.PUT_LINE('CAMION CREADO' );
    WHEN INVALID_MODEL THEN
        STATUS_RESULT_OUT := 0;
        DBMS_OUTPUT.PUT_LINE('MODELO INGRESADO INVALIDO' );
    WHEN OTHERS THEN   
        STATUS_RESULT_OUT:= -1;
        DBMS_OUTPUT.PUT_LINE('UPS HUBO UN ERROR' );
        
END;


--DECLARE 
--    ID_RESULT_OUT NUMBER;
--    STATUS_RESULT_OUT NUMBER;
--BEGIN
--    FV_TRA_CREATE_TRUCK('123CASD', '350z', 'Nissan', 1, 1, 1, 1, 1, ID_RESULT_OUT, STATUS_RESULT_OUT);
--    DBMS_OUTPUT.PUT_LINE(ID_RESULT_OUT);
--END;
