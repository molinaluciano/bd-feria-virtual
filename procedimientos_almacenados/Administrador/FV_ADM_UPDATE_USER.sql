create or replace PROCEDURE FV_ADM_UPDATE_USER
 (
    ID_TIPO_USUARIO_IN IN NUMBER ,
    ID_PAIS_IN IN NUMBER,
    NOMBRE_IN IN VARCHAR2,
    APELLIDO_PATERNO_IN IN VARCHAR2,
    APELLIDO_MATERNO_IN IN VARCHAR2,
    CORREO_IN IN VARCHAR2,
    CONTRASENA_IN IN VARCHAR2,
    RUT_IN IN NUMBER,
    NUMERO_IDENTIFICADOR_IN IN VARCHAR2,
    DIRECCION_IN IN VARCHAR2,
    CODIGO_POSTAL_IN IN NUMBER,
    TELEFONO_IN IN NUMBER,
    ID_CONTRATO_IN IN NUMBER,
    STATUS_RESULT_OUT OUT NUMBER
    
)

AS
    ID_TEMP_VAR NUMBER := 0;
    INVALID_MODEL EXCEPTION;
    USER_EDITED EXCEPTION;
    USER_NOT_FOUND EXCEPTION;
    COUNT_USER NUMBER := 0;
    IS_VALID_USER NUMBER  := 0;
BEGIN
        SELECT  FN_VALID_USER(
                    ID_PAIS_IN,
                    NOMBRE_IN, 
                    APELLIDO_PATERNO_IN, 
                    APELLIDO_MATERNO_IN, 
                    CORREO_IN, 
                    CONTRASENA_IN, 
                    RUT_IN, 
                    NUMERO_IDENTIFICADOR_IN, 
                    DIRECCION_IN, 
                    CODIGO_POSTAL_IN, 
                    TELEFONO_IN
                ) INTO IS_VALID_USER FROM DUAL;

        IF IS_VALID_USER != 1 THEN
            DBMS_OUTPUT.PUT_LINE('HAY PROBLEMA CON LA FUNCION DEBIDO A QUE EL MODELO NO ESTA COMPLETO' );
            RAISE INVALID_MODEL;
        END IF;


        SELECT COUNT(*) INTO COUNT_USER FROM USUARIO WHERE CORREO = CORREO_IN;
        IF  COUNT_USER > 0 THEN
            SELECT ID_USUARIO INTO ID_TEMP_VAR FROM USUARIO WHERE CORREO = CORREO_IN;
            UPDATE USUARIO SET NOMBRE = NOMBRE_IN, APELLIDO_PATERNO = APELLIDO_PATERNO_IN, APELLIDO_MATERNO = APELLIDO_MATERNO_IN, CORREO = CORREO_IN, CONTRASENA = CONTRASENA_IN, RUT = RUT_IN, 
            NUMERO_IDENTIFICADOR = NUMERO_IDENTIFICADOR_IN, DIRECCION = DIRECCION_IN, CODIGO_POSTAL = CODIGO_POSTAL_IN, TELEFONO = TELEFONO_IN WHERE ID_USUARIO = ID_TEMP_VAR ;
            RAISE USER_EDITED;
        END IF; 
        
        
        SELECT COUNT(*) INTO COUNT_USER FROM PRODUCTOR WHERE CORREO = CORREO_IN;
        IF COUNT_USER > 0 THEN
            SELECT ID_PRODUCTOR INTO ID_TEMP_VAR FROM PRODUCTOR WHERE CORREO = CORREO_IN;
            UPDATE PRODUCTOR SET NOMBRE = NOMBRE_IN, APELLIDO_PATERNO = APELLIDO_PATERNO_IN, APELLIDO_MATERNO = APELLIDO_MATERNO_IN, CORREO = CORREO_IN, CONTRASENA = CONTRASENA_IN, RUT = RUT_IN, 
            NUMERO_IDENTIFICADOR = NUMERO_IDENTIFICADOR_IN, DIRECCION = DIRECCION_IN, CODIGO_POSTAL = CODIGO_POSTAL_IN, TELEFONO = TELEFONO_IN WHERE ID_PRODUCTOR = ID_TEMP_VAR;
            RAISE USER_EDITED;
        END IF;
        
        
        SELECT COUNT(*) INTO COUNT_USER FROM TRANSPORTISTA WHERE CORREO = CORREO_IN;
        IF COUNT_USER > 0 THEN
            SELECT ID_TRANSPORTISTA INTO ID_TEMP_VAR FROM TRANSPORTISTA WHERE CORREO = CORREO_IN;
            UPDATE TRANSPORTISTA SET NOMBRE = NOMBRE_IN, APELLIDO_PATERNO = APELLIDO_PATERNO_IN, APELLIDO_MATERNO = APELLIDO_MATERNO_IN, CORREO = CORREO_IN, CONTRASENA = CONTRASENA_IN, RUT = RUT_IN, 
            NUMERO_IDENTIFICADOR = NUMERO_IDENTIFICADOR_IN, DIRECCION = DIRECCION_IN, CODIGO_POSTAL = CODIGO_POSTAL_IN, TELEFONO = TELEFONO_IN WHERE ID_TRANSPORTISTA = ID_TEMP_VAR;
            RAISE USER_EDITED;
        END IF;

        IF COUNT_USER = 0 THEN
            RAISE USER_NOT_FOUND;
        END IF;

EXCEPTION
    WHEN USER_EDITED THEN
        STATUS_RESULT_OUT:= 1;
        DBMS_OUTPUT.PUT_LINE('USUARIO UPDATEADO' );
    WHEN INVALID_MODEL THEN
        STATUS_RESULT_OUT:= 0;
        DBMS_OUTPUT.PUT_LINE('MODELO INGRESADO INVALIDO' );
    WHEN USER_NOT_FOUND THEN
        STATUS_RESULT_OUT:= -1;
        DBMS_OUTPUT.PUT_LINE('EL USUARIO QUE SE DESEA EDITAR NO EXISTE O EL MAIL ES INVALIDO' );
    WHEN OTHERS THEN
        STATUS_RESULT_OUT:= -2;
        DBMS_OUTPUT.PUT_LINE('UPS HUBO UN ERROR' );
   
END;



